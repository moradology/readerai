[project]
name = "readerai"
version = "0.1.0"
description = "AI-powered reading companion for children"
readme = "README.md"
requires-python = ">=3.13"
dependencies = [
    "aioboto3>=15.0.0",
    "dspy>=2.6.27",
    "fastapi>=0.116.0",
    "httpx>=0.28.1",
    "pydantic>=2.11.7",
    "pydantic-settings>=2.10.1",
    "pytest>=8.4.1",
    "python-dotenv>=1.1.1",
    "rich>=14.0.0",
    "typer>=0.16.0",
    "uvicorn[standard]>=0.35.0",
]

[tool.setuptools]
packages = ["readerai"]

[build-system]
requires = ["setuptools>=61.0"]
build-backend = "setuptools.build_meta"

[dependency-groups]
dev = [
    "ipdb>=0.13.13",
    "ipython>=9.4.0",
    "pytest>=8.4.1",
    "pre-commit>=4.2.0",
    "anyio[trio]>=4.0.0",
    "pytest-anyio>=0.0.0",
    "mutagen>=1.47.0",
]

[project.scripts]
readerai = "readerai.cli.main:app"

[tool.mypy]
python_version = "3.13"
warn_return_any = false  # Initially less strict with 'any' usage
warn_unused_configs = true
disallow_untyped_defs = false  # Start with less strict typing
disallow_incomplete_defs = false
check_untyped_defs = false  # Initially less strict with untyped code
disallow_untyped_decorators = false
no_implicit_optional = false  # Initially less strict
namespace_packages = true
ignore_missing_imports = true  # Enable this to stop complaints about missing imports

# Gradually enable stricter settings:
# disallow_untyped_defs = true
# disallow_incomplete_defs = true
# check_untyped_defs = true
# disallow_untyped_decorators = true
# no_implicit_optional = true
# warn_return_any = true

# Per-module configuration to gradually increase strictness
[[tool.mypy.overrides]]
module = "tests.*"
ignore_errors = true  # Ignore errors in test files initially

[tool.pytest.ini_options]
minversion = "6.0"
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "-ra",
    "--strict-markers",
]
markers = [
    "integration: marks tests as integration tests (deselect with '-m \"not integration\"')",
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "audio: marks tests that play audio (run with 'pytest -m audio --play-audio')",
]

[tool.ruff]
line-length = 88
target-version = "py313"
# Enable various useful rules
lint.select = [
    "E",   # pycodestyle errors
    "F",   # pyflakes
    "UP",  # pyupgrade - Python version upgrade linting
    "I",   # isort - import sorting
]
lint.ignore = [
    "E501",  # line too long (let black handle this)
]
exclude = [
    ".git",
    "__pycache__",
    ".venv",
    "build",
    "dist",
]

[tool.isort]
profile = "black"
line_length = 88
known_first_party = ["readerai"]

[tool.bandit]
exclude_dirs = ["/tests/", "/test/"]
skips = ["B101"]  # Skip assert_used test
